"""
Componentes reutiliz치veis para an치lise de imagem.
Este m칩dulo cont칠m componentes de UI que podem ser compartilhados.
"""

import streamlit as st
import os
import sys

# Adicionar caminhos para importa칞칚o
SERVICES_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
GERAL_DIR = os.path.join(SERVICES_DIR, "geral")

# Adicionar diret칩rios ao path se necess치rio
if GERAL_DIR not in sys.path:
    sys.path.insert(0, GERAL_DIR)

# Importar funcionalidades necess치rias
from geral.app_logger import add_log, log_success, log_error
from geral.image_analysis_service import ImageAnalysisService


def image_analysis_ui(container=None):
    """
    Renderiza a interface de an치lise de imagem em um container
    ou diretamente na p치gina se container=None.

    Args:
        container: Opcional, container streamlit para renderizar o componente.
                  Se None, usa st diretamente.

    Returns:
        Tuple: (uploaded_file, analysis_result) - A imagem carregada e o resultado da an치lise
    """
    # Escolher onde renderizar (container ou diretamente)
    ui = container if container else st

    result = None

    # Upload de imagem
    uploaded_file = ui.file_uploader(
        "Escolha uma imagem", type=["jpg", "jpeg", "png"], key="image_analysis_uploader"
    )

    if uploaded_file is not None:
        # Mostrar imagem
        ui.image(uploaded_file, caption="Imagem carregada", width=300)

        # Op칞칫es de an치lise
        options = ui.radio(
            "Escolha o tipo de an치lise:", ["An치lise simples", "Gera칞칚o de planejamento"]
        )

        # Descri칞칚o adicional se for planejamento
        description = ""
        if options == "Gera칞칚o de planejamento":
            description = ui.text_area(
                "Descri칞칚o adicional para o planejamento:",
                placeholder="Ex: Planejar uma viagem para este destino",
            )

        if ui.button("Analisar Imagem"):
            add_log(f"Iniciando an치lise de imagem: {options}")

            with ui.spinner("Processando imagem..."):
                try:
                    # Garantir que o servi칞o exista na sess칚o
                    if "image_analysis_service" not in st.session_state:
                        st.session_state.image_analysis_service = ImageAnalysisService(
                            debug_mode=True
                        )

                    # Obter servi칞o
                    image_service = st.session_state.image_analysis_service

                    if options == "An치lise simples":
                        # An치lise simples
                        prompt = "Descreva esta imagem brevemente."
                        result = image_service.analyze_image(
                            uploaded_file, prompt=prompt
                        )
                        log_success("An치lise de imagem conclu칤da com sucesso")

                        # Exibir resultado
                        ui.subheader("Resultado da An치lise")
                        ui.write(result)

                    else:
                        # Gera칞칚o de planejamento
                        result = image_service.generate_planning_from_image(
                            uploaded_file, description=description
                        )
                        log_success("Plano gerado com sucesso")

                        # Exibir resultado
                        ui.subheader("Plano Gerado")
                        ui.write(result)

                        # Armazenar o plano para uso posterior
                        if "last_plan" not in st.session_state:
                            st.session_state.last_plan = result

                except Exception as e:
                    log_error(f"Erro na an치lise: {str(e)}")
                    ui.error(f"Ocorreu um erro durante a an치lise: {str(e)}")

    return uploaded_file, result


def image_analysis_standalone():
    """
    Vers칚o standalone da interface de an치lise de imagem.
    Usado quando este m칩dulo 칠 executado diretamente.
    """
    import streamlit as st
    from geral.app_logger import get_logs, clear_logs

    # N츾O CONFIGURA MAIS A P츼GINA AQUI
    # A configura칞칚o deve estar no arquivo principal (image_analysis.py)

    # T칤tulo da p치gina
    st.title("游댌 An치lise de Imagem")
    st.write("Ferramenta para an치lise de imagem com IA.")

    # Exibir logs
    with st.expander("Logs do Sistema", expanded=False):
        cols = st.columns([4, 1])
        with cols[1]:
            if st.button("Limpar Logs"):
                clear_logs()
                st.success("Logs limpos")
                st.rerun()

        logs = get_logs(max_count=20)
        if logs:
            for log in logs:
                st.text(log)
        else:
            st.info("Nenhum log registrado ainda.")

    # Interface principal
    st.header("An치lise de Imagem")

    # Usar o componente reutiliz치vel
    image_analysis_ui()

    # Informa칞칫es sobre o m칩dulo
    with st.expander("Sobre esta ferramenta"):
        st.write(
            """
        Esta 칠 uma vers칚o modular do servi칞o de an치lise de imagem.
        Ela cont칠m apenas as funcionalidades essenciais:

        1. **An치lise simples**: Descri칞칚o breve da imagem
        2. **Gera칞칚o de planejamento**: Cria칞칚o de um plano baseado na imagem

        Esta ferramenta pode ser integrada ao aplicativo principal.
        """
        )
